---
import Layout from "../layouts/Layout.astro";
import { supabase } from "../lib/supabase";

const accessToken = Astro.cookies.get("sb-access-token");
const refreshToken = Astro.cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
    return Astro.redirect("/signin");
}

let session;
try {
    session = await supabase.auth.setSession({
        refresh_token: refreshToken.value,
        access_token: accessToken.value,
    });
    if (session.error) {
        Astro.cookies.delete("sb-access-token", {
            path: "/",
        });
        Astro.cookies.delete("sb-refresh-token", {
            path: "/",
        });
        return Astro.redirect("/signin");
    }
} catch (error) {
    Astro.cookies.delete("sb-access-token", {
        path: "/",
    });
    Astro.cookies.delete("sb-refresh-token", {
        path: "/",
    });
    return Astro.redirect("/signin");
}

const email = session.data.user?.email;

let { data, error } = await supabase.from("personal-records").select("*");
---

<Layout title="dashboard">
    <main class="flex flex-col justify-start items-center h-full w-full">
        <h1>Welcome</h1>
        <h2>We are happy to see you here</h2>
        <h3>{email}</h3>
        <h4 class="w-full p-4">My Records:</h4>
        {
            data && (
                <div class="flex gap-4 w-full p-4">
                    {data.map((entry) => (
                        <div class="border-2 border-white rounded-lg p-4 flex flex-col gap-4">
                            <p>Time: {entry.time}</p>
                            <p>Answer: {entry.answer}</p>
                        </div>
                    ))}
                </div>
            )
        }
    </main>
</Layout>
