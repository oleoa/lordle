---
export const prerender = false

import Layout from "../layouts/Layout.astro";
import { supabase } from "../lib/supabase";

const accessToken = Astro.cookies.get("sb-access-token");
const refreshToken = Astro.cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
    return Astro.redirect("/signin");
}

let session;
try {
    session = await supabase.auth.setSession({
        refresh_token: refreshToken.value,
        access_token: accessToken.value,
    });
    if (session.error) {
        Astro.cookies.delete("sb-access-token", {
            path: "/",
        });
        Astro.cookies.delete("sb-refresh-token", {
            path: "/",
        });
        return Astro.redirect("/signin");
    }
} catch (error) {
    Astro.cookies.delete("sb-access-token", {
        path: "/",
    });
    Astro.cookies.delete("sb-refresh-token", {
        path: "/",
    });
    return Astro.redirect("/signin");
}

let { data, error } = await supabase.from("personal-records").select("*");

let records;
if (data?.length == 0 || !data) records = false;
else {
  records = data.map((r) => {
    const date = new Date(r.created_at);
    const pad = (num: number) => String(num).padStart(2, "0");
    const day = pad(date.getDate());
    const month = pad(date.getMonth() + 1);
    const year = date.getFullYear();
    const formattedDate = `${day}/${month}/${year}`;
    return {
      time: r.time,
      answer: r.answer,
      formattedDate: formattedDate,
    }
  })
  records.sort((a, b) => a.time - b.time);
}
---

<Layout title="dashboard">
    <main class="flex flex-col justify-start items-center h-full w-full gap-4">
        <h1>Welcome</h1>
        <h3>{records ? "Your Records:" : "You have no records saved"}</h3>
        {
            records && Array.isArray(records) && (
                <>
                    {records.map((r) => (
                        <div class="border-2 border-white rounded-lg p-4 grid grid-cols-2 gap-4 bg-blur">
                            <!-- 100 time = 1 sec | 1000 time = 10 sec | 10.000 time = 01:40 -->
                            <p>Time:</p>
                            <span>
                                {(Math.floor((r.time / 100) / 60) % 60) < 10 ? "0" + (Math.floor((r.time / 100) / 60) % 60) : (Math.floor((r.time / 100) / 60) % 60)}:{(Math.floor(r.time / 100) % 60) < 10 ? "0" + (Math.floor(r.time / 100) % 60) : (Math.floor(r.time / 100) % 60)}:{(Math.floor(r.time) % 100) < 10 ? "0" + (Math.floor(r.time) % 100) : (Math.floor(r.time) % 100)}
                            </span>
                            <p>Answer:</p>
                            <span>{r.answer}</span>
                            <p>Date:</p>
                            <span>{r.formattedDate}</span>
                        </div>
                    ))}
                </>
            )
        }
    </main>
</Layout>
